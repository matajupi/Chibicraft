@startuml

class Texture {
    - {static} std::vector<Texture> texture_table_

    - Texture(TID_T tid)
    + uint32_t GetPixel(int x, int y) const
    + void Load()

    + {static} Texture GetTexture(TID_T tid)
}

enum BlockSurface {
    XY_Lower
    XY_Higher
    XZ_Lower
    XZ_Higher
    YZ_Lower
    YZ_Higher
}
class Block {
    - {static} std::vector<Block> block_table_

    - Block(int bid)
    + Texture GetTexture(BlockSurface surface) const

    + {static} Block GetBlock(BID_T bid)
}

class World {
    + const int kWorldHeight
    + const int kWorldWidth
    + const int kWorldDepth

    - std::vector<Chunk> chunks_
    - BID_T map_[kWorldHeight][kWorldWidth][kWorldDepth]

    + const Block &GetBlock(const glm::ivec3 &pos) const
    + void SetBlock(const glm::ivec3 &pos, const Block &block)
    - glm::ivec3 TransCoord(const glm::ivec3 &pos) const
}
class Chunk {
    + const int kChunkHeight
    + const int kChunkWidth
    + const int kChunkDepth

    - char contents_[kHeight][kWidth][kDepth]

    + Chunk(int cid)
    + bool Exists() const
    + void Generate()
    + void Load()
    + void Save()
}

abstract Raycaster {
    + void Raycasting(const Player &player, const World &world)
}

@enduml
